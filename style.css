:root {
    --light-blue: #34b4e3;
    --dark-blue: #013033;
    --red: #e30000;

    --drop-hover: rgba(0,0,0,0.03);
    --drop-active: rgba(0,0,0,0.06);
    --drop-file-over: rgba(0,0,0,0.06);

    --file-input-drag-n-drop-component-border: black;

    --textarea-wrapper-border: rgba(0,0,0,0.5);
    --selected-input-border: rgba(0,0,0,0.5);
    --selected-input-box-shadow: rgba(0,0,0,0.5);

    --hash-text-shadow: #00beff45 0 0 1px;
}

/*html, body {*/
/*    min-height: 100vh;*/
/*    margin: 0;*/
/*}*/

/*body {*/
/*    display: flex;*/
/*    flex-direction: column;*/
/*    justify-content: center;*/
/*    align-items: center;*/
/*}*/

/*.main-container-component {*/
/*    display: flex;*/
/*    flex-direction: column;*/
/*    align-items: center;*/
/*}*/

.main-container-component .items {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.main-container-component .interface {
    display: flex;
    justify-content: center;
}

.main-container-component .settings {
    width: 320px;
    padding: 6px 8px;
    box-sizing: border-box;
}

.main-container-component .settings input[type="number"] {
    max-width: 42px;
}

.main-container-component .settings > * {
    margin: 6px;
}

.main-container-component .settings .stream-type input{
    margin: 4px;
}

.main-container-component .file-input {
    width: 100%;
}

.main-container-component .text-input textarea {
    width: 310px;
    box-sizing: border-box;
}

.main-container-component input.invalid {
    border: 2px solid var(--red);
    outline: none;
    box-shadow: 0px 0px 1px 0px var(--red);
}

.main-container-component .file-input {
    width: 310px;
}

.hasher-item-component {
    width: 310px;
    height: 200px;
    border: 1px solid dimgray;
    /*box-sizing: border-box;*/
    margin: 4px 4px;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hasher-item-component .name {
    padding: 6px 0;
}

.hasher-item-component > div {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}


.hasher-item-component button {
    user-select: none;
}

.hasher-item-component .hash {
    display: flex;
    justify-content: center;
    padding-bottom: 4px;
    padding-top: 4px;
    border-top: 1px solid darkgrey;
    width: 100%;

}

.hasher-item-component .progress-line {
    background-color: var(--light-blue);
    min-height: 4px;
}

.red {
    color: var(--red);
}

.inactive {
    opacity: 0.5;
}

.file-input-drag-n-drop-component {
    min-height: 6em;
    transition: background-color 0.1s;
    border: solid 1px var(--file-input-drag-n-drop-component-border);
    box-sizing: border-box;
}

.file-input-drag-n-drop-component.drop-hover { /*todo: rename - file-over */
    background-color: var(--drop-file-over);
    transition: background-color 0.1s;
}

.file-input-drag-n-drop-component:hover {
    background-color: var(--drop-hover);
}

.file-input-drag-n-drop-component:active {
    background-color: var(--drop-active);
}


.file-input-drag-n-drop-component label {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.file-input-drag-n-drop-component .file-info {
    max-width: 100%;
}

.file-input-drag-n-drop-component .file-info .file-name {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

#add-files-button {
    font-size: 18px;
}


/*.main-container-component .text-input textarea {*/
/*    min-height: 6em;*/
/*}*/


.file-group {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
}

.file-group > div {
    width: 312px;
}


.inputs {
    width: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}


.inputs textarea {
    display: flex;
    box-sizing: border-box;
    height: 100%;
    /*resize: none;*/
    width: 100%;
}

.text-input {
    display: flex;
    align-self: stretch;
    box-sizing: border-box;
}

.inputs textarea {
    display: block;
    height: 100%;
    box-sizing: border-box;
    border: 0;
    outline: none;
    min-height: 100px;
}


.textarea-wrapper {
    border: solid 1px var(--textarea-wrapper-border);
    box-sizing: border-box;
}

.selected-input {
    border: solid 1px var(--selected-input-border);
    box-sizing: border-box;
    box-shadow: 0 0 10px var(--selected-input-box-shadow);
}

.inputs > * {
    margin: 4px 0px;
}


.input-switch > * {
    padding: 0px 2px;
}

.input-switch {
    padding: 6px;
}



.file-info > * {
    padding: 4px 12px;
}

.file-info .file-mtime {
    opacity: 0.9;
}

.interface  {
    margin: 4px;
}
button {
    margin: 2px;
    padding: 5px 6px;
    min-width: 120px;
}

textarea {
    padding: 5px;
    font-size: 17px;
}


textarea:focus::placeholder {
    opacity: 0;
    transition: opacity 0.25s ease;
}

.input-switch > div {
    padding-bottom: 6px;
}

/* scrollbar breaks it a bit for 961px - 974px */
/* todo use grid */
@media all and (min-width: 640px) and (max-width: 960px) {
    .main-container-component .text-input textarea {
        width: 630px;
    }
}

@media all and (min-width: 960px) {
    .inputs > * {
        margin-left: 4px;
        margin-right: 4px;
    }
}


@media all and (min-width: 1280px) {
    .hasher-item-component {
        width: 280px;
    }
}


.input-switch {
    margin-top: 12px;
    margin-bottom: 24px;
}


.input-switch-checkbox {
    opacity: 0;
    transition: opacity 0.4s ease;
}

.input-switch-checkbox:hover {
    opacity: 1;
    transition: opacity 0.25s ease;
}

.middle {
    height: 100%;
    position: relative;
}

.hash-times {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.hash-time {
    font-size: 18px;
}

.file-loading-time {
    position: absolute;
    left: 0;
    bottom: 0;
    padding: 6px 18px;
    opacity: 0.7;
}

.total-hash-time {
    position: absolute;
    right: 0;
    bottom: 0;
    padding: 6px 18px;
    opacity: 0.8;
}

.hash {
    height: 20px;
}


.computing .hash-time {
    opacity: 0.3;
}


.hash-time {
    text-shadow: var(--light-blue) 0 0 30px, var(--light-blue) 0 0 1px;
    color: var(--dark-blue);
}


.hash {
    /*text-shadow: var(--hash-text-shadow);*/
}